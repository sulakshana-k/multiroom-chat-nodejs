1. // server side logic
	// 'socket.io' logic will be in /lib. 
	mkdir lib 

2. // client side webbrowser files
	mkdir public

3. // create subdirectories:
	mkdir public/javascripts

4. mkdir public/stylesheets

5. `npm install` reads 'package.json' and installs whatever 'dependencies' we 
	specify in that.
	Therefore before we run `npm install` it is necessary to create 'package.json' 
	as follows:

	Create a file called package.json in the main dir and store this in it.
	{
		"name": "chatrooms",
		"version": "0.0.1",
		"description": "Minimalist multiroom chat server",
		"dependencies": {
					"socket.io": "~0.9.6",
					"mime": "~1.2.7"
				}
	}

6. create file 'server.js' in the main dir.

7. Websockets:
		Websockets use TCP/IP communication protocol which interacts between browsers
		and server. Websockets are built on top of normal TCP/IP sockets.
		
		There are more important differences on the receiving side of things. 
		When the receiver does a recv (or read) on a TCP socket, there is no guarantee 
		that the number of bytes returned corresponds to a single send (or write) on the 
		sender side. It might be the same, it may be less (or zero) and it might even be 
		more (in which case bytes from multiple send/writes are received). 
		With WebSockets, the recipient of a message is event-driven (you generally register 
		a message handler routine), and the data in the event is always the entire message 
		that the other side sent.

		https://stackoverflow.com/a/16947118

		'socket.io' is a wraper around WebSockets


8. socket.io:
		'socket.io' provides virtual channels to which users can subscribe. This way each 
		message won't have to be sent to all the users.

		'socket.io' has event emitters.	

9. nodejs server vs http server vs socket.io server

10. 'chat_ui.js' contains JQuery for controlling HTML(DOM) code of 'index.html'.
11. 'chat.js' contains functions for changing usernames and roomnames.
	It emits signals for room change, name change, and messages.
12. 'chat_server.js' contains slots which listen to room changes, name changes, and new messages,
	and it broadcasts these information to other users and rooms.

